
//********************************常量枚举定义*********************************

//战斗方向常量
enum E_BattleDirection {
    NONE = 0; //当前不在移动时使用
    UP = 1;
    DOWN = 2;
    LEFT = 3;
    RIGHT = 4;
    UP_LEFT = 5;
    UP_RIGHT = 6;
    DOWN_LEFT = 7;
    DOWN_RIGHT = 8;
}

//********************************数据结构定义*********************************

//战场信息结构体
message G_BattleInfo {
    required int64 id = 1; //房间唯一ID
    required int32 type = 2; //战场类型:1.正常,2.团队
    required int32 mapId = 3; //战场编号
    required int64 overTime = 4; //结算时间,单位毫秒
    required int32 elapsedTime = 5; //已经经历的时间,单位毫秒
}

//战场物品结构体
message G_BattleItem {
    required int32 id = 1; //物品唯一编号
    required int32 itemId = 2; // 物品配置编号,查看ItemsConfig
    required float location_x = 3; //当前x
    required float location_y = 4; //当前y
    required int32 areaId = 5; //物品所属的区域编号,不同类型的物品对应区域不同
    optional int32 effectTime = 6; //狂暴道具生效时间（毫秒）
}

//战场物体结构体
message G_BattleObject {
    required int32 id = 1; //物体唯一编号
    required int32 objectType = 2; // 物体类型,1:可破坏物体、2: 炸弹
    required float location_x = 3; //当前x
    required float location_y = 4; //当前y
}

//**********************************协议定义***********************************

//匹配请求(BATTLE_JOIN_REQ = 2001)
message BattleJoinReq {
    required int64 playerId = 1; //玩家编号
    required int64 time = 2; //客户端维护的服务器时间戳
    required int32 sign = 3; //签名
    required int64 battleId = 4; //用于断线重连，玩家匹配到指定的战场 -1为由服务器分配
}

//匹配响应(BATTLE_JOIN_RESP = 2002)
message BattleJoinResp {
    required G_BattleInfo battleInfo = 1;
    required int32 enemyRoleId = 2; //仇人角色编号,为-1时没有仇人角色
    required int64 serverTime = 3; //服务器时间戳（毫秒）
}

//改变方向请求(BATTLE_CHANGE_DIRECTION_REQ = 2003)
message BattleChangeDirectionReq {
    //位置(拐点处的位置，而不是产生操作时的位置)
    required int32 roleId = 1; // 角色编号
    required float location_x = 2; //当前x
    required float location_y = 3; //当前y
    required E_BattleDirection direction = 4; // 当前的方向
    required int32 battleTime = 5; //战场经历过的时间,单位毫秒
}

//改变方向广播(BATTLE_CHANGE_DIRECTION_RESP = 2004)
message BattleChangeDirectionResp {
    required int32 roleId = 1; // 角色编号
    required float location_x = 2; //当前x
    required float location_y = 3; //当前y
    required E_BattleDirection direction = 4; // 当前的方向
    required int32 battleTime = 5; //战场经历过的时间,单位毫秒
}

//角色复活广播(BATTLE_ROLE_REVIVAL_RESP = 2008)
message BattleRoleRevivalResp {
    required int32 roleId = 1; //角色编号
    required float locationX = 2; //坐标x
    required float locationY = 3; //坐标y
    required int32 status = 4;//角色状态
}

//产生战场物品(BATTLE_ITEM_BORN_RESP = 2016)
message BattleItemBornResp {
    repeated G_BattleItem items = 1; //物品列表
}

//指定角色离开战场(BATTLE_ROLE_LEAVE_RESP = 2026)
message BattleRoleLeaveResp {
    required int32 roleId = 1; //角色编号
}

//请求放弃NPC玩家控制权(BATTLE_CHANGE_NPC_PLAYER_REQ = 2019)
message BattleChangeNPCPlayerReq {
    required bool acceptNpc = 1; //是否想接受npc控制权true 接受， false不接受
}

//修改控制NPC的玩家(BATTLE_CHANGE_NPC_PLAYERR_RESP = 2020)
message BattleChangeNPCPlayerResp {
    //该消息仅原控制者和新控制者会收到
    required int64 newPlayerId = 1;
}

//战场心跳(BATTLE_HEARTBEAT_REQ = 2023)
message BattleHeartbeatReq {
}

//战场心跳回复(BATTLE_HEARTBEAT_RESP = 2024)
message BattleHeartbeatResp {
    required int64 serverTime = 1; //服务器时间
    required int32 battleTime = 2; //战场过去时间
    required int32 clientVersion = 3; //最新的客户端版本,不匹配则需要重新下载
}

//战场所有物品数据查询(BATTLE_ITEMS_REQ = 2033)
message BattleItemsReq {
}

//战场所有物品查询返回(BATTLE_ITEMS_RESP = 2034)
message BattleItemsResp {
    repeated G_BattleItem items = 1; //房间中的物品列表
}

//请求战场物件(BATTLE_OBJECTS_REQ = 2047)
message BattleObjectsReq {
}

//战场物件返回(BATTLE_OBJECTS_RESP = 2048)
message BattleObjectsResp {
    repeated G_BattleObject destructbleObjects = 1; //战场物件
}

//服务端推送位置(测试时使用)(BATTLE_ROLE_POSITION_RESP = 2040)
message BattleRolePositionResp {
    required int32 id = 1; //角色编号
    required float locationX = 2; //坐标x
    required float locationY = 3; //坐标y
    required E_BattleDirection direction = 4; // 当前的方向
    required int32 battleTime = 5; //战场经历过的时间,单位毫秒
}



//********************************数据结构定义*********************************

//战场角色结构体
message G_BomberBattleRole {
    required int32 id = 1; //角色战场ID
    required string nickName = 2; //角色名字
    required int32 controllerType = 3; //角色控制者类型:0.玩家,1.NPC
    required int64 playerId = 4; //全服唯一ID, controllerType=0时为玩家ID, controllerType=1时为所属玩家ID
    required int32 headId = 5; //头像id
    required int32 status = 6 [default = 0]; //状态:0.正常状态 1.变身状态 2.无敌状态 3.死亡状态
    required float locationX = 7; //坐标x
    required float locationY = 8; //坐标y
    required E_BattleDirection direction = 9; //当前的方向
    required int32 hp = 10; //当前氮气槽
    required int32 scorePoint = 11; //当前积分
    required int32 bombNumber = 12; //炸弹上限
    required float speed = 15; //移动速度
    required int32 totalKill = 16; //总击杀
    required int32 unstoppableKill = 17; //连击数
    optional int32 npcId = 18; //当角色控制者类型是npc时有效
    optional int32 revivalTime = 19; //复活剩余时间（毫秒）,死亡时有效
}

//战场炸弹结构体
message G_BomberBattleBomb {
    required int32 id = 1; //炸弹战场ID
    required int32 type = 2; //炸弹类型
    required int32 roleId = 3; //所属角色的编号
    required int32 scope = 4; //炸弹范围
    required int32 explodeTime = 5; //爆炸剩余时间,单位毫秒
    required float locationX = 6; //坐标x
    required float locationY = 7; //坐标y
}

//战场排名数据
message G_BomberBattleRank {
    required int32 rank = 1; // 排名
    required string nickName = 2; // 名称
    required int32 headId = 3; //头像编号
    required int32 totalScorePoint = 4; //总积分
    required int32 totalKill = 5; //总杀人数
    required int32 maxUnstoppableKill = 6; //最大连杀个数
}

//**********************************协议定义***********************************

//新角色加入战场(BOMBER_BATTLE_ROLE_JOIN_RESP = 2102)
message BomberBattleRoleJoinResp {
    required G_BomberBattleRole role = 1;
}

//战场所有角色数据查询(BOMBER_BATTLE_ROLES_REQ = 2103)
message BomberBattleRolesReq {
}

//战场所有角色查询返回(BOMBER_BATTLE_ROLES_RESP = 2104)
message BomberBattleRolesResp {
    repeated G_BomberBattleRole roles = 1; //房间中的角色列表
    required int32 enemyRoleId = 2; //仇人角色编号,为-1时没有仇人角色
    required int32 battleTime = 3; //战场经历过的时间,单位毫秒
}

//战场所有炸弹数据查询(BOMBER_BATTLE_BOMBS_REQ = 2105)
message BomberBattleBombsReq {
}

//战场所有炸弹数据查询返回(BOMBER_BATTLE_BOMBS_RESP = 2106)
message BomberBattleBombsResp {
    repeated G_BomberBattleBomb bombs = 1; //房间中的炸弹列表
}

//放置炸弹(BOMBER_BATTLE_PLACE_BOMB_REQ = 2107)
message BomberBattlePlaceBombReq {
    required int32 roleId = 1; //角色编号
    required float locationX = 2; //坐标x
    required float locationY = 3; //坐标y
    required int32 battleTime = 5; //战场经历过的时间,单位毫秒
}

//放置炸弹成功(BOMBER_BATTLE_PLACE_BOMB_RESP = 2108)
message BomberBattlePlaceBombResp {
    required int32 roleId = 1; //角色编号
    required float locationX = 2; //坐标x
    required float locationY = 3; //坐标y
    required int32 battleTime = 5; //战场经历过的时间,单位毫秒
    required G_BomberBattleBomb bomb = 6; //炸弹
}

//引爆炸弹(BOMBER_BATTLE_DETONATE_BOMBS_REQ = 2109)
message BomberBattleDetonateBombsReq {
    required int32 roleId = 1; //角色编号
    required int32 battleTime = 2; //战场经历过的时间,单位毫秒
}

//引爆炸弹成功(BOMBER_BATTLE_DETONATE_BOMBS_RESP = 2110)
message BomberBattleDetonateBombsResp {
    required int32 roleId = 1; //角色编号
    repeated int32 bombIds = 2; // 引爆的炸弹编号
}

//炸伤其他角色(BOMBER_BATTLE_WOUND_ROLE_RESP = 2112)
message BomberBattleWoundRoleResp {
    required int32 bomberId = 1; //引爆者编号
    required int32 bomberScorePoint = 2; //引爆者当前总积分
    required int32 woundedRoleId = 3; //被炸伤的角色编号
    required int32 woundedRoleHP = 4; //被炸伤的角色血量
    required float woundedRoleX = 5; //被炸伤的角色坐标X
    required float woundedRoleY = 6; //被炸伤的角色坐标Y
    required int32 battleTime = 7; //战场经历过的时间,单位毫秒
}

//击杀广播(BOMBER_BATTLE_KILL_RESP = 2114)
message BomberBattleKillResp {
    required int32 roleId = 1; //击杀者
    required int32 targetId = 2; // 被击杀的单位编号(可能是角色或其他道具)
    required float location_x = 3; //当前x
    required float location_y = 4; //当前y
    required int32 battleTime = 5; //战场经历过的时间,单位毫秒
    required int32 scorePoint = 6; //角色当前的总积分
    optional int32 bombNumber = 7; //炸弹上限,仅当击杀后上限改变时有值
    optional int32 bombDamage = 8; //炸弹伤害,仅当击杀后伤害改变时有值
    optional int32 bombScope = 9; //炸弹范围,仅当击杀后炸弹范围有改变时有值
    optional int32 hp = 10; //击杀者当前血量,仅当击杀回血道具有效
}

// 变身广播(BOMBER_BATTLE_POWER_UP_RESP = 2116)
message BomberBattlePowerUpResp {
    required int32 roleId = 1; //角色编号
    required float speed = 2; //当前速度
}

// 变身结束广播(BOMBER_BATTLE_POWER_DOWN_RESP = 2118)
message BomberBattlePowerDownResp {
    required int32 roleId = 1; //角色编号
    required float speed = 2; //当前速度
}

//结算游戏(BOMBER_BATTLE_END_RESP = 2120)
message BomberBattleEndResp {
    repeated G_BomberBattleRank topRanks = 1; //前三名角色排名数据
    required G_BomberBattleRank selfRank = 2; //自身排名数据
}






//********************************常量枚举定义*********************************

//错误码常量定义
enum E_ErrorCode {
    // 无错误
    NO_ERROR = 0;
    // 已在其他设备登陆
    LOGIN_ON_OTHER_DEVICE = 1;
    // 不可处理的的消息类型
    UNKNOWN_MESSAGE_HANDLER = 2;
    //服务器内部错误
    SERVER_ERROR = 3;
    // 需要先登陆账号,也可能校验码过期
    LOGIN_FIRST = 4;
    // 非法的输入参数
    INVALID_PARAM = 5;
    // 服务器验证失败
    SERVER_CHECK_FAIL = 6;
    // 当前处于封号状态
    BE_BANNED = 7;
    // 当前处于禁言状态
    BE_SILENCE = 8;
    // 玩家信息不存在
    NO_PLAYER = 9;
    // 请求时间滞后
    REQUEST_TIME_LAG = 10;
    // 请求时间超前
    REQUEST_TIME_LEAD = 11;
    // 请求延迟
    REQUEST_TIME_DELAY = 12;
    // 系统维护中
    SYSTEM_MAINTAINING = 13;
    // 服务器不在服务状态
    SERVER_NOT_IN_SERVICE = 14;

    //--------------战斗错误码----------------
    // 匹配队列已满
    BATTLE_MATCH_QUEUE_FULL = 2001;
    // 无法创建战场
    BATTLE_CANT_CREATE = 2002;
    // 玩家无法加入战场
    BATTLE_PLAYER_CANT_JOIN = 2003;
    // 无法创建战场角色
    BATTLE_CANT_CREATE_ROLE = 2004;
    // 技能处于CD中
    BATTLE_SKILL_IN_CD = 2005;
    // 没有可替换的玩家,当前NPC玩家不可更换
    BATTLE_CANT_CHANGE_NPC_PLAYER = 2006;
    // 错误的NPC玩家
    BATTLE_NPC_PLAYER_ID_INVALID = 2007;
    // 战场中玩家不存在
    BATTLE_PLAYER_NOT_EXISTS = 2008;
    // 战场不存在
    BATTLE_NOT_EXISTS = 2009;
    //没有角色
    BATTLE_NO_ROLE = 2013;
    //状态错误
    BATTLE_ERROR_STATUS = 2014;
    //当前格子有误
    BATTLE_ERROR_CELL = 2015;
    //要穿越的墙需要不可以通过
    BATTLE_ERROR_NEXT_CELL = 2016;
    //目标格子需要可通过
    BATTLE_ERROR_TARGET_CELL = 2017;
    //要跳到目标格子中间
    BATTLE_ERROR_TARGET_CELL_CENTRAL = 2018;
    //同步位置不存在
    BATTLE_ERROR_POSITION = 2019;
    //位置不能移动
    BATTLE_NOT_CHANGE_DIRECTION = 2020;
    //技能信息有误
    BATTLE_SKILL_ERROE = 2021;
    //技能错误
    BATTLE_NO_SKILL_ERROE = 2022;
    //错误的方向
    BATTLE_ERROR_DIRECTION = 2023;

    //--------------游戏错误码----------------
    //拥有该表情，不能购买
    GAME_HAS_HEAD_ITEM = 5001;
    //合成信息有误
    GAME_SYNTHESIS_CONFIG_ERROR = 5002;
    //商城信息有误
    GAME_MALL_CONFIG_ERROR = 5003;
    //商城货币不足
    GAME_CURRENCY_NOT_ENOUGH = 5004;
    //请输入正确的礼品码
    GAME_GIFT_CODE_ERROR = 5005;
    //礼品码已使用
    GAME_GIFT_CODE_HAS_USE = 5006;
    //邮件已满请先整理
    GAME_MAIL_IS_FULL = 5007;
    //没有可以领取的奖励
    GAME_NOT_SHARE_BONUS = 5008;
    //你已经输入过了
    GAME_ALREADY_INPUT = 5009;
    //不可输入自己的专属码
    GAME_CODE_IS_YOU = 5010;
    //无效的专属码
    GAME_CODE_INVALID = 5011;
    //对方繁忙稍后再试
    GAME_INVITER_BUSY = 5012;
    //金蘑菇不足，改名失败
    GAME_NOT_ENOUGH_DIAMONDS = 5013;
    //未满足排位系统条件
    GAME_NOT_MEET_RANK_CONDITIONS = 5014;
    //宝箱状态错误
    GAME_CHEST_WRONG_STATE = 5019;
     //宝箱信息错误
    GAME_NO_TARGET_CHEST = 5020;
}

//********************************数据结构定义*********************************

//**********************************协议定义***********************************

//错误码提示(ERROR_CODE_RESP = 2)
message ErrorCodeResp {
    required CMD cmd = 1; //对应的请求协议号
    required E_ErrorCode code = 2; //错误码
    repeated string param = 3; //提示语参数
    optional bytes extra = 4; //额外信息
}
//********************************常量枚举定义*********************************

//********************************数据结构定义*********************************

// 玩家信息
message G_Player {
    required int64 id = 1; //玩家唯一编号
    required string accountName = 2; //账号名
    required string nickname = 3; //角色名
    required int32 headId = 4; //头像编号
}

//**********************************协议定义***********************************

//登陆请求(LOGIN_REQ = 1001)
message LoginReq {
    required string accountName = 1; // 账号名
}

//登录响应(LOGIN_RESP = 1002)
message LoginRes {
    required G_Player player = 1; //有角色
    required int32 checkCode = 2; //校验码,一定时间后会过期,届时再重新触发登陆
    required int64 serverTime = 3; //服务器时间
    optional int32 clientVersion = 4; //最新的客户端版本 不匹配则需要重新下载
    optional int32 bannedTime = 5; // 封号结束时间
}

// 修改玩家头像请求(CHANGE_PLAYER_INFO_REQ = 1003)
message ChangePlayerInfoReq {
    required int64 playerId = 1; //玩家编号
    required int32 checkCode = 2; //校验码
    required int32 headId = 3; //头像配置编号
    required string nickame = 4; // 新昵称
}

// 修改玩家头像返回(CHANGE_PLAYER_INFO_RESP = 1004)
message ChangePlayerInfoResp {
    required int32 headId = 1; //头像配置编号
    required string nickname = 2; // 新昵称
}
enum CMD {

    //********************通用消息编号 1~1000********************
    INVALID_MSG = 0;
    ERROR_CODE_RESP = 2;

    //********************游戏玩法消息编号 1001~2000********************
    LOGIN_REQ = 1001;
    LOGIN_RESP = 1002;
    CHANGE_PLAYER_INFO_REQ = 1003;
    CHANGE_PLAYER_INFO_RESP = 1004;

    //********************战场消息编号 2001~3000********************
    BATTLE_JOIN_REQ = 2001;
    BATTLE_JOIN_RESP = 2002;
    BATTLE_CHANGE_DIRECTION_REQ = 2003;
    BATTLE_CHANGE_DIRECTION_RESP = 2004;
    BATTLE_ROLE_REVIVAL_RESP = 2008;
    BATTLE_ITEM_BORN_RESP = 2016;
    BATTLE_CHANGE_NPC_PLAYER_REQ = 2019;
    BATTLE_CHANGE_NPC_PLAYER_RESP = 2020;
    BATTLE_HEARTBEAT_REQ = 2023;
    BATTLE_HEARTBEAT_RESP = 2024;
    BATTLE_ROLE_LEAVE_RESP = 2026;
    BATTLE_ITEMS_REQ = 2033;
    BATTLE_ITEMS_RESP = 2034;
    BATTLE_OBJECTS_REQ = 2047;
    BATTLE_OBJECTS_RESP = 2048;
    BATTLE_ROLE_INFO_RESP = 2050;
    BATTLE_ROLE_POSITION_RESP = 2040;
    NORMAL_BATTLE_END_CHEST_RESP = 2058;

    //********************普通战场协议********************
    NORMAL_BATTLE_KILL_RESP = 2006;
    NORMAL_BATTLE_USE_SKILL_REQ = 2009;
    NORMAL_BATTLE_USE_SKILL_RESP = 2010;
    NORMAL_BATTLE_CRAZY_START_RESP = 2012;
    NORMAL_BATTLE_CRAZY_END_RESP = 2014;
    NORMAL_BATTLE_ROLE_JOIN_RESP = 2018;
    NORMAL_BATTLE_END_RESP = 2022;
    NORMAL_BATTLE_ROLES_REQ = 2027;
    NORMAL_BATTLE_ROLES_RESP = 2028;
    NORMAL_BATTLE_ACCELERATION_END_RESP = 2032;
    NORMAL_BATTLE_INFO_REQ = 2035;
    NORMAL_BATTLE_INFO_RESP = 2036;
    NORMAL_BATTLE_USE_SKILL_END_RESP = 2038;
    NORMAL_BATTLE_USE_EXTEND_SKILL_REQ = 2041;
    NORMAL_BATTLE_USE_EXTEND_SKILL_RESP = 2042;
    NORMAL_BATTLE_STUN_START_RESP = 2044;
    NORMAL_BATTLE_STUN_END_RESP = 2046;
    NORMAL_BATTLE_PROTECT_START_RESP = 2052;
    NORMAL_BATTLE_PROTECT_END_RESP = 2054;
    NORMAL_BATTLE_TOUCH_ITEM_RESP = 2056;


    //********************炸弹人战场协议********************
    BOMBER_BATTLE_ROLE_JOIN_RESP = 2102;
    BOMBER_BATTLE_ROLES_REQ = 2103;
    BOMBER_BATTLE_ROLES_RESP = 2104;
    BOMBER_BATTLE_BOMBS_REQ = 2105;
    BOMBER_BATTLE_BOMBS_RESP = 2106;
    BOMBER_BATTLE_PLACE_BOMB_REQ = 2107;
    BOMBER_BATTLE_PLACE_BOMB_RESP = 2108;
    BOMBER_BATTLE_DETONATE_BOMBS_REQ = 2109;
    BOMBER_BATTLE_DETONATE_BOMBS_RESP = 2110;
    BOMBER_BATTLE_WOUND_ROLE_RESP = 2112;
    BOMBER_BATTLE_KILL_RESP = 2114;
    BOMBER_BATTLE_POWER_UP_RESP = 2116;
    BOMBER_BATTLE_POWER_DOWN_RESP = 2118;
    BOMBER_BATTLE_END_RESP = 2120;
}


//********************************数据结构定义*********************************

//战场角色结构体
message G_NormalBattleRole {
    required int32 id = 1; //角色战场ID
    required string nickName = 2; //角色名字
    required int32 controllerType = 3; //角色控制者类型:0.玩家,1.NPC
    required int64 playerId = 4; //全服唯一ID, controllerType=0时为玩家ID, controllerType=1时为所属玩家ID
    required int32 headId = 5; //头像id
    required int32 status = 6 [default = 0]; //状态:0.正常状态 1.暴走状态 2.无敌状态 3.死亡状态4.加速状态
    required float locationX = 7; //坐标x
    required float locationY = 8; //坐标y
    required E_BattleDirection direction = 9; //当前的方向
    required int32 exp = 10; //当前氮气槽
    optional int32 usingExp = 11 [default = 0]; //正在消耗的氮气槽的当前值,仅在狂暴下有用
    required int32 scorePoint = 12; //当前积分
    repeated G_NormalBattleRoleSkill skill = 13; //技能信息
    optional int32 totalKill = 14; //总击杀
    optional int32 currKill = 15; //当前击杀数
    optional int32 unstoppableKill = 16; //连击数
    optional int32 unstoppableTime = 17; //连击结束时间
    optional int32 npcId = 18; //当角色类型是npc是npc的id
    optional int32 revivalTime = 19; //复活剩余时间（毫秒）
    required bool isRage = 20; //是否狂暴过
    required bool isProtect = 21;//是否保护状态
    optional int32 rageEndTime = 22; //狂暴结束时间
}

//战场技能结构体
message G_NormalBattleRoleSkill {
    required int32 id = 1; //技能编号
    required int32 cd = 2 [default = 0]; //当前技能剩余冷却时间,单位毫秒
    required int32 type =3; //技能类型：0，默认技能；1是道具技能
}

//战场排名数据
message G_NormalBattleRank {
    required int32 rank = 1; // 排名
    required string nickName = 2; // 名称
    required int32 headId = 3; //头像编号
    required int32 totalScorePoint = 4; //总积分
    required int32 totalKill = 5; //总杀人数
    required int32 maxUnstoppableKill = 6; //最大连杀个数
}

//**********************************协议定义***********************************

//击杀广播(NORMAL_BATTLE_KILL_RESP = 2006)
message NormalBattleKillResp {
    required int32 roleId = 1; //击杀者
    required int32 targetId = 2; // 被击杀的单位编号(可能是角色或其他道具)
    required float location_x = 3; //当前x
    required float location_y = 4; //当前y
    required int32 battleTime = 5; //战场经历过的时间,单位毫秒
    optional int32 exp = 6; //角色当前的经验值
    optional int32 scorePoint = 7; //角色当前的得分
    optional int32 totalKill = 8; //总击杀
    optional int32 currKill = 9; //当前击杀数
    optional int32 unstoppableKill = 10; //连击数
    optional int32 targetExp = 11; //当前氮气槽
    optional int32 targetScorePoint = 12; //当前积分
    optional int32 targetTotalKill = 13; //总击杀
    optional int32 targetCurrKill = 14; //当前击杀数
    optional int32 targetUnstoppableKill = 15; //连击数
}

//使用技能请求(NORMAL_BATTLE_USE_SKILL_REQ = 2009)
message NormalBattleUseSkillReq {
    required int32 roleId = 1; //角色编号
    required float locationX = 2; //坐标x
    required float locationY = 3; //坐标y
    required E_BattleDirection direction = 4; // 当前的方向
    required int32 battleTime = 5; //战场经历过的时间,单位毫秒
    required float targetX = 6; //目标x
    required float targetY = 7; //目标y
}

//广播使用技能(NORMAL_BATTLE_USE_SKILL_RESP = 2010)
message NormalBattleUseSkillResp {
    required int32 id = 1; //角色编号
    required float locationX = 2; //坐标x
    required float locationY = 3; //坐标y
    required E_BattleDirection direction = 4; // 当前的方向
    required int32 battleTime = 5; //战场经历过的时间,单位毫秒
    required float targetX = 6; //目标x
    required float targetY = 7; //目标y
}

//开始变身广播(NORMAL_BATTLE_CRAZY_START_RESP = 2012)
message NormalBattleCrazyStartResp {
    required int32 id = 1; //角色编号
    required int32 itemId = 2; //变身道具编号,移除该道具
    required float locationX = 3; //坐标x
    required float locationY = 4; //坐标y
    required E_BattleDirection direction = 5; // 当前的方向
    required int32 battleTime = 6; //战场经历过的时间,单位毫秒
    required int32 exp = 7; //当前氮气值
    required int32 crazyEndTime = 8; //变身结束服务器时间,单位毫秒
}

//结束变身广播(NORMAL_BATTLE_CRAZY_END_RESP = 2014)
message NormalBattleCrazyEndResp {
    required int32 id = 1; //角色编号
    required float locationX = 2; //坐标x
    required float locationY = 3; //坐标y
    required E_BattleDirection direction = 4; // 当前的方向
    required int32 battleTime = 5; //战场经历过的时间,单位毫秒
}

//广播新角色加入战场(NORMAL_BATTLE_ROLE_JOIN_RESP = 2018)
message NormalBattleRoleJoinResp {
    required G_NormalBattleRole role = 1;
}

//结算游戏(NORMAL_BATTLE_END_RESP = 2022)
message NormalBattleEndResp {
    repeated G_NormalBattleRank topRanks = 1; //前三名角色排名数据
    required G_NormalBattleRank selfRank = 2; //自身排名数据
    optional int32 chestId = 3;//获得的宝箱ID
    required int32 cherryDaySum = 4;//樱桃日获得数量（不包括当前）
}

//战场所有角色数据查询(NORMAL_BATTLE_ROLES_REQ = 2027)
message NormalBattleRolesReq {
}

//战场所有角色查询返回(NORMAL_BATTLE_ROLES_RESP = 2028)
message NormalBattleRolesResp {
    repeated G_NormalBattleRole roles = 1; //房间中的角色列表
    required int32 enemyRoleId = 2; //仇人角色编号,为-1时没有仇人角色
    required int32 battleTime = 3; //战场经历过的时间,单位毫秒
}

//使用加速技能请求(NORMAL_BATTLE_ACCELERATION_START_REQ = 2029)
message NormalBattleAccelerationStartReq {
    required int32 roleId = 1; //角色编号
    required float locationX = 2; //坐标x
    required float locationY = 3; //坐标y
    required E_BattleDirection direction = 4; // 当前的方向
    required int32 battleTime = 5; //战场经历过的时间,单位毫秒
}

//广播使用加速技能(NORMAL_BATTLE_ACCELERATION_START_RESP = 2030)
message NormalBattleAccelerationStartResp {
    required int32 id = 1; //角色编号
    required float locationX = 2; //坐标x
    required float locationY = 3; //坐标y
    required E_BattleDirection direction = 4; // 当前的方向
    required int32 battleTime = 5; //战场经历过的时间,单位毫秒
    required int32 exp = 6; //当前氮气值
}

//广播加速结束(NORMAL_BATTLE_ACCELERATION_END_RESP = 2032)
message NormalBattleAccelerationEndResp {
    required int32 id = 1; //角色编号
    required float locationX = 2; //坐标x
    required float locationY = 3; //坐标y
    required E_BattleDirection direction = 4; // 当前的方向
    required int32 battleTime = 5; //战场经历过的时间,单位毫秒
    required int32 exp = 6; //当前氮气值
}

//战场数据查询(NORMAL_BATTLE_INFO_REQ = 2035)
message NormalBattleInfoReq {
}

//推送战场信息(NORMAL_BATTLE_INFO_RESP = 2036)
message NormalBattleInfoResp {
    required int64 id = 1; //房间唯一ID
    required int32 type = 2; //战场类型:1.正常,2.团队
    required int32 mapId = 3; //战场编号
    required int64 overTime = 4; //结算时间,单位毫秒
    required int32 elapsedTime = 5; //已经经历的时间,单位毫秒
    repeated G_NormalBattleRole roles = 6; //房间中的角色列表
    repeated G_BattleItem items = 7; //物品列表
    required int32 enemyRoleId = 8; //仇人角色编号,为-1时没有仇人角色
}

//广播穿墙技能结束(NORMAL_BATTLE_USE_SKILL_END_RESP = 2038)
message NormalBattleUseSkillEndResp {
    required int32 id = 1; //角色编号
    required float locationX = 2; //坐标x
    required float locationY = 3; //坐标y
    required E_BattleDirection direction = 4; // 当前的方向
    required int32 battleTime = 5; //战场经历过的时间,单位毫秒
}

//使用扩展技能请求(BATTLE_USE_EXTEND_SKILL_REQ = 2041)
message NormalBattleUseExtendSkillReq {
    required int32 roleId = 1; //角色编号
    required float locationX = 2; //坐标x
    required float locationY = 3; //坐标y
    required E_BattleDirection direction = 4; // 当前的方向
    required int32 battleTime = 5; //战场经历过的时间,单位毫秒
    required int32 skillId = 6; //使用技能id
    optional float targetX = 7; //目标x
    optional float targetY = 8; //目标y
}

//广播使用扩展技能(BATTLE_USE_EXTEND_SKILL_RESP = 2042)
message NormalBattleUseExtendSkillResp {
    required int32 roleId = 1; //角色编号
    required float locationX = 2; //坐标x
    required float locationY = 3; //坐标y
    required E_BattleDirection direction = 4; // 当前的方向
    required int32 battleTime = 5; //战场经历过的时间,单位毫秒
    required int32 skillId = 6; //使用技能id
    required int32 exp = 7; //当前氮气值
    optional float targetX = 8; //目标x
    optional float targetY = 9; //目标y
}

//广播震晕玩家列表(BATTLE_STUN_START_RESP = 2044)
message NormalBattleStunStartResp {
    repeated int32 roleIds = 1; //角色编号
    required int32 battleTime = 2; //战场经历过的时间,单位毫秒
}

//广播震晕结束(BATTLE_STUN_END_RESP = 2046)
message NormalBattleStunEndResp {
    required int32 roleId = 1; //角色编号
    required int32 battleTime = 5; //战场经历过的时间,单位毫秒
}

//同步角色位置(BATTLE_ROLE_INFO_RESP = 2050)
message NormalBattleRoleInfoResp {
    required int32 roleId = 1; //角色编号
    required float locationX = 2; //坐标x
    required float locationY = 3; //坐标y
    required E_BattleDirection direction = 4; // 当前的方向
    required int32 battleTime = 5; //战场经历过的时间,单位毫秒
}

//广播保护开始(NORMAL_BATTLE_PROTECT_START_RESP = 2052)
message NormalBattleProtectStartResp {
    required int32 roleId = 1; //角色编号
}

//广播保护结束(NORMAL_BATTLE_PROTECT_START_RESP = 2054)
message NormalBattleProtectEndResp {
    required int32 roleId = 1; //角色编号
}
//吃道具广播(NORMAL_BATTLE_TOUCH_ITEM_RESP = 2056)
message NormalBattleTouchItemResp {
    required int32 roleId = 1; //击杀者
    required int32 targetId = 2; // 被击杀的单位编号(可能是角色或其他道具)
    required int32 battleTime = 3; //战场经历过的时间,单位毫秒
    required int32 exp = 4; //角色当前的经验值
    required int32 scorePoint = 5; //角色当前的得分
}

//结算游戏(NORMAL_BATTLE_END_CHEST_RESP = 2058)
message NormalBattleEndChestResp {
    required string chestInfo = 1;//宝箱类型，宝箱概率，在线人数，结算分值
}
